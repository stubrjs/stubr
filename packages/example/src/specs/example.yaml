openapi: 3.0.0
info:
    version: 1.0.4
    title: MFA service
    description: >
        # **Introduction**

        - Multi Factor Authentication Service

        A service that provides workflow for multi-factor authentication at Elinvar platform.
        Since Elinvar is hiding connectivity to different service provides (including MFA providers), it provides generic API to setup multiple authentication factors using different otp types and APis for management of client's devices.

        Since the APIs are generic real list of possible MFA factors that are available for the user are defined by the MFA provider that is setup at connectivity.

        More information about the MFA flows can be found on the API business flows documentation: [MFA service](https://skywalker.atlassian.net/wiki/spaces/WAL/pages/3382968343/MFA)

        # Notational Conventions

          General notational conventions are described in confluence: [General Conventions](https://skywalker.atlassian.net/wiki/spaces/WAL/pages/3384213546/General+Conventions).

        # Versions

        - 1.0.0 - Initial APIs

        - 1.0.1 - API fields modifications:

                /device/{id}/otp
                NEW  List active OTPs for selected device API
                NEW FIELD contextData field to hold structured JSON for client challenges templates
                /otp/{operationId}/challenge
                NEW  load challenge token on device for signing
        - 1.0.2 - new API method PATCH /device/{id} for updating **pushRegistrationId** for the device

        - 1.0.3 Added description for statuses of Device binding and MFA challenge verification flows

        - 1.0.4 Added restricted example in StartDeviceBindingRequestBody.keyPurpose
servers:
    - description: stage
      url: https://gateway.stage.elinvar.tech/v1/mfa/
    - description: uat
      url: https://gateway.uat.elinvar.tech/v1/mfa/
    - description: prod
      url: https://gateway.prod.elinvar.tech/v1/mfa/
tags:
    - name: Device client initiated MFA setup flow
      description: APIs for the workflow of device binding when this is directly initiated and handled on the device
      externalDocs:
          description: Confluence Documentation
          url: 'https://skywalker.atlassian.net/wiki/spaces/WAL/pages/3382968343/MFA'
    - name: Device Management
      description: APIs for the management of devices
      externalDocs:
          description: Confluence Documentation
          url: 'https://skywalker.atlassian.net/wiki/spaces/WAL/pages/3382968343/MFA'
    - name: MFA factor confirmation flow
      description: APIs the workflow of confirming MFA.
      externalDocs:
          description: Confluence Documentation
          url: 'https://skywalker.atlassian.net/wiki/spaces/EPD/pages/3351150872/Elinvar+MFA+Integration'
paths:
    /otp:
        put:
            tags:
                - MFA factor confirmation flow
            summary: Verify otp token for the specific requestId
            operationId: verifyOtpUsingPUT
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyOtp'
            responses:
                '200':
                    $ref: '#/components/responses/OtpDetailsResponse'
            security:
                - bearerAuth: []
    /otp/{operationId}:
        get:
            tags:
                - MFA factor confirmation flow
            summary: Find otp by operation Id to check the status.
            operationId: getOtpDetailsUsingGET
            parameters:
                - name: operationId
                  in: path
                  description: operationId
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    $ref: '#/components/responses/OtpDetailsResponse'
            security:
                - bearerAuth: []
        delete:
            tags:
                - MFA factor confirmation flow
            summary: Delete otp by operation.
            operationId: deleteOtpUsingDELETE
            parameters:
                - name: operationId
                  in: path
                  description: operationId
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: OK
            security:
                - bearerAuth: []
    /otp/{operationId}/challenge:
        get:
            tags:
                - MFA factor confirmation flow
            summary: Find otp challenge toke by operation Id.
            description: To be used by Device in order to retrieve actual challenge token that needs to be signed on the device.
            operationId: getOtpChallengeUsingGET
            parameters:
                - name: operationId
                  in: path
                  description: operationId
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Challenge'
            security:
                - bearerAuth: []
    /device/binding:
        post:
            tags:
                - Device client initiated MFA setup flow
            summary: Start device binding.
            operationId: startDeviceBindingUsingPOST
            requestBody:
                $ref: '#/components/requestBodies/StartDeviceBindingRequestBody'
            responses:
                '200':
                    $ref: '#/components/responses/DeviceBindingDetailsResponse'
            security:
                - bearerAuth: []
    /device/binding/{id}:
        put:
            tags:
                - Device client initiated MFA setup flow
            summary: Confirm/reject device binding
            operationId: confirmRejectDeviceBindingUsingPUT
            parameters:
                - $ref: '#/components/parameters/deviceBindingId'
            requestBody:
                $ref: '#/components/requestBodies/ConfirmRejectDeviceBindingRequestBody'
            responses:
                '200':
                    $ref: '#/components/responses/DeviceBindingDetailsResponse'
            security:
                - bearerAuth: []
        get:
            tags:
                - Device client initiated MFA setup flow
            summary: Get device binding details by id
            operationId: getDeviceBindingDetailsUsingGET
            parameters:
                - $ref: '#/components/parameters/deviceBindingId'
            responses:
                '200':
                    $ref: '#/components/responses/DeviceBindingDetailsResponse'
            security:
                - bearerAuth: []
        delete:
            tags:
                - Device client initiated MFA setup flow
            summary: Delete device binding request. Not idempotent operation
            operationId: deleteDeviceBindingRequestUsingDELETE
            parameters:
                - $ref: '#/components/parameters/deviceBindingId'
            responses:
                '200':
                    $ref: '#/components/responses/ok'
            security:
                - bearerAuth: []
    /device:
        get:
            tags:
                - Device Management
            summary: Get devices by user account id
            description: Retrieves all devices of the user by his unique identity accountId
            operationId: getDevicesUsingGET
            parameters:
                - name: accountId
                  in: query
                  description: accountId
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    $ref: '#/components/responses/DevicesList'
            security:
                - bearerAuth: []
    /device/{id}:
        get:
            tags:
                - Device Management
            summary: Get a device by device id.
            operationId: getDeviceUsingGET
            parameters:
                - name: id
                  in: path
                  description: id of the device
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: sucessfully fetched device
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Device'
            security:
                - bearerAuth: []
        patch:
            tags:
                - Device Management
            summary: Patch device to update it's fields.
            operationId: updateDeviceUsingPatch
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DevicePatch'
            parameters:
                - name: id
                  in: path
                  description: id of the device
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: sucessfully patched a device
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Device'
            security:
                - bearerAuth: []
        delete:
            tags:
                - Device Management
            summary: Delete a device by device id. Non idempotent operation.
            description: >
                - Deletes device from the system which also eventually leads to unbinding it from the MFA provider

                - Deleting last device would lead to reset of the MFA and require customer to execute device binding flow again
            operationId: deleteDeviceUsingDELETE
            parameters:
                - name: id
                  in: path
                  description: id of the device
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    $ref: '#/components/responses/ok'
            security:
                - bearerAuth: []
    /device/{id}/otp:
        get:
            tags:
                - Device Management
            summary: Get active OTPs by device id.
            operationId: getDeviceOtpsUsingGET
            parameters:
                - name: id
                  in: path
                  description: id of the device
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: response for the OtpDetails that describe selected OTP process status
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/OtpDetails'
            security:
                - bearerAuth: []
components:
    parameters:
        deviceBindingId:
            in: path
            name: id
            required: true
            description: id of the device binding request
            schema:
                type: string
    schemas:
        Challenge:
            title: ChallengeDto
            type: object
            properties:
                challenge:
                    description: actual challenge token that needs to be signed or provided in MFA flow
                    type: string
                createdAt:
                    type: string
                    format: date-time
                expiresAt:
                    type: string
                    format: date-time
                operationId:
                    type: string
        FactorType:
            type: string
            description: >
                SMS - deliver SMS on the mobile number of the Person (type mobile) <br/>
                EMAIL - deliver Email with the challenge code <br/>
                PUSH - send push notification for mobile device with a challenge that needs to be signed <br/>
                PUSH_TAN - send push notification for mobile device that can be linked to the operation with dynamic linking
            enum:
                - SMS
                - EMAIL
                - PUSH
                - PUSH_TAN
        OtpDetails:
            title: OtpDetails
            type: object
            properties:
                details:
                    type: string
                detailsWeb:
                    type: string
                contextData:
                    type: object
                    description: >
                        structured context data of the maf cahllenge that contains fields that are necesary to describe the MFA action that is happening. I.e. amount of the payment,
                        IBAN of the account or other info that is necessary to be shown on the device or web inside challeng authorization popup
                operationId:
                    type: string
                operationName:
                    description: a name of the operation that has triggered MFA flow. Can be used as typefo contextData to understand what data is expected there.
                    type: string
                provider:
                    description: provider of MFA
                    type: string
                    enum:
                        - ELINVAR
                        - SOLARISBANK
                factorType:
                    $ref: '#/components/schemas/FactorType'
                status:
                    description:
                        described current status of the MFA challenge. Status mayb include steps that are technical between MFA provider and Elinvar platform to trace process in details. <br>
                        <table>
                        <thead>
                        <tr>
                        <th>status</th>
                        <th>Terminal status</th>
                        <th>Description</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                        <td>
                        REQUESTED
                        </td>
                        <td>
                        No
                        </td>
                        <td>
                        MFA Challenge was requested by Elinvar from MFA provider
                        </td>
                        </tr>
                        <tr>
                        <td>
                        PENDING_CONFIRMATION
                        </td>
                        <td>
                        No
                        </td>
                        <td>MFA challenge was generated by MFA provider, sent to the client and current system
                        is waiting for a challenge to be provided by the client into PUT /otp endpoint
                        </td>
                        </tr>
                        <tr>
                        <td>
                        PENDING_VERIFICATION
                        </td>
                        <td>
                        No
                        </td>
                        <td>
                        The client has provided MFA challenge into PUT /otp endpoint and Elinavr is waiting to verify this with MFA
                        provider
                        </td>
                        </tr>
                        <tr>
                        <td>
                        VERIFIED
                        </td>
                        <td>
                        Yes
                        </td>
                        <td>
                        MFA challenge was successfully verified and it was correct
                        </td>
                        </tr>
                        <tr>
                        <td>
                        GENERATION_FAILED
                        </td>
                        <td>
                        Yes
                        </td>
                        <td>
                        There was an error during generation of the challenge. Either on connection with MFA provider or error on
                        the MFA provider side
                        </td>
                        </tr>
                        <tr>
                        <td>
                        VERIFICATION_FAILED
                        </td>
                        <td>
                        No
                        </td>
                        <td>
                        The challenge that was provided by the client has not passed verification because it was not correct.
                        Another challenge has to be generated for a retry case (done automatically). This status will be visible
                        only in response for /opt PUT endpoint
                        </td>
                        </tr>
                        <tr>
                        <td>
                        EXPIRED
                        </td>
                        <td>
                        Yes
                        </td>
                        <td>
                        The challenge has been expired. The whole process has to be started over (from the 1st operation).
                        </td>
                        </tr>
                        <tr>
                        <td>
                        REJECTED
                        </td>
                        <td>
                        Yes
                        </td>
                        <td>
                        The status that shows that the customer has rejected Otp.
                        New Otp will not be generated. The whole process has to be started again.
                        </td>
                        </tr>
                        <tr>
                        <td>
                        DELETED
                        </td>
                        <td>
                        Yes
                        </td>
                        <td>
                        The challenge was deleted
                        </td>
                        </tr>
                        <tr>
                        <td>
                        DEVICE_NOT_ACTIVATED
                        </td>
                        <td>
                        Yes
                        </td>
                        <td>
                        The device for delivering the challenge (or phone number) is not activated and wecan not deliver challenge
                        there
                        </td>
                        </tr>
                        </tbody>
                        </table>
                    type: string
                    enum:
                        - REQUESTED
                        - PENDING_CONFIRMATION
                        - PENDING_VERIFICATION
                        - VERIFIED
                        - GENERATION_FAILED
                        - VERIFICATION_FAILED
                        - EXPIRED
                        - REJECTED
                        - DELETED
                        - DEVICE_NOT_ACTIVATED
            example:
                status: 'PENDING_CONFIRMATION'
                operationId: '199130c2-2315-4997-833a-d3e47e817c83'
                provider: 'SOLARISBANK'
                factorType: 'PUSH_TAN'
                details: 'n/a'
                detailsWeb: 'Es wurde eine E-Mail an Sie versendet, welche einen Code zur Bestätigung der Änderung enthält. Der Code ist zwei Stunden gültig - Sollte der Code abgelaufen sein oder schließen Sie dieses Fenster, können Sie durch wiederholen des vorherigen Schrittes eine neue E-Mail mit Code auslösen.'
                operationName: 'CONFIRM_PHONE_CHANGE'
                contextData:
                    phone: '********010'
                    ipAddress: '62.216.208.216'
                    userAgent: 'PostmanRuntime/7.29.0'
                    operationDate: '2022-05-09T14:17:54.159783Z'
                    userAgentDetails:
                        agentClass: 'Special'
                        agentName: 'PostmanRuntime'
                        deviceClass: 'Unknown'
                        agentNameVersion: 'PostmanRuntime 7.29.0'
                        deviceName: 'Unknown'
                        operatingSystemName: 'Unknown'
                        deviceBrand: 'Unknown'
        VerifyOtp:
            title: VerifyOtp
            type: object
            properties:
                operationId:
                    description: id of the operation
                    type: string
                token:
                    description: signed challenge
                    type: string
        Device:
            title: Device
            type: object
            properties:
                id:
                    description: unique identifier of the device
                    type: string
                accountId:
                    description: identifier of the MFA authorization account
                    type: string
                bClientId:
                    description: unqiue identifier of the bClient (see applications model of Elinvar)
                    type: string
                factorTypes:
                    type: array
                    items:
                        $ref: '#/components/schemas/FactorType'
                name:
                    type: string
                provider:
                    type: string
                    enum:
                        - ELINVAR
                        - SOLARISBANK
                pushRegistrationId:
                    description: >
                        Unique device push registration id that identifies device in push notification services. This id should be Registration ID or device token which is referenced in this spec:<br>
                        [sns-prerequisites-for-mobile-push-notifications]: https://docs.aws.amazon.com/sns/latest/dg/sns-prerequisites-for-mobile-push-notifications.html
                    type: string
        DevicePatch:
            title: Device
            type: object
            properties:
                pushRegistrationId:
                    description: >
                        Unique device push registration id that identifies device in push notification services. This id should be Registration ID or device token which is referenced in this spec:<br>
                        [sns-prerequisites-for-mobile-push-notifications]: https://docs.aws.amazon.com/sns/latest/dg/sns-prerequisites-for-mobile-push-notifications.html
                    type: string
        DeviceBindingDetails:
            title: DeviceBindingDetailsDto
            type: object
            properties:
                factorType:
                    $ref: '#/components/schemas/FactorType'
                id:
                    type: string
                    format: uuid
                provider:
                    type: string
                    enum:
                        - ELINVAR
                        - SOLARISBANK
                status:
                    description: >
                        <table>
                          <thead>
                            <tr>
                            <th>status</th>
                            <th>Terminal status</th>
                            <th>Description</th>
                            </tr>
                          </thead>
                          <tbody>
                            <tr>
                                <td>
                                    REQUESTED
                                </td>
                                <td>
                                    No
                                </td>
                                <td>
                                    Device binding process was requested by the API client
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    AWAITING_CONFIRMATION
                                </td>
                                <td>
                                    No
                                </td>
                                <td>Device binding process was requested by the API client and MFA challenge to verify that was sent to the client. Currently the system is waiting for a challenge to be provided by the client into PUT /device/binding/{id} endpoint
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    AWAITING_VERIFICATION
                                </td>
                                <td>
                                    No
                                </td>
                                <td>
                                    The client has provided MFA challenge into PUT /device/binding/{id} endpoint and Elinavr is waiting to verify this with MFA provider
                                    provider
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    VERIFIED
                                </td>
                                <td>
                                    Yes
                                </td>
                                <td>
                                    The challenge that was submitted for device binding verification was successfully verified by MFA provider
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    ERROR
                                </td>
                                <td>
                                    No
                                </td>
                                <td>
                                    There is an error during the beginning or in the device binding process. <br/>
                                    Also ERROR is set when the challenge verification has failed at MFA provider. This is the case that is not terminal and still MFA challenga verification can be retried.
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    DELETED
                                </td>
                                <td>
                                    Yes
                                </td>
                                <td>
                                    The process has been deleted
                                </td>
                            </tr>
                            </tbody>
                        </table>
                    type: string
                    enum:
                        - REQUESTED
                        - AWAITING_CONFIRMATION
                        - AWAITING_VERIFICATION
                        - VERIFIED
                        - ERROR
                        - DELETED
    requestBodies:
        ConfirmRejectDeviceBindingRequestBody:
            description: Data to cnfirm or Reject device binding process. Both status actions only makes sense in case the process is initiated from the Web application and process should be confirmed, completed from the web app.
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - id
                            - status
                        properties:
                            signature:
                                type: string
                            status:
                                type: string
                                enum:
                                    - CONFIRM
                                    - REJECT
        StartDeviceBindingRequestBody:
            description: Request to initiate device binding from mobile device
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - keyPurpose
                            - provider
                        properties:
                            factorType:
                                description: >
                                    A primary challenge that is setup during this device binding process. After device binding is complete these challenges would be possible to be used in MFA authentication flow. <br>
                                    ## **Note**
                                    Challenges that are setup may define the workflow that has to be executed in order to complete MFA setup process. Also selected challenges can implicitly enable other challenges
                                    <br>
                                    ## TODO: ths is defined by the workflow of device binding already and should not be in these APIs. Should be defined as a result of the device binding and return in response.
                                type: string
                                enum:
                                    - PUSH
                                    - PUSH_TAN
                            keyPurpose:
                                description: >
                                    purpose usage of the submitted device 'key'. <br>
                                    this attribute is used as a 'key' for differentiating between usage of different keys for signing different MFA factors in case client sets up multiple keys and initiates usage of specific keys for specific operations. i.e:
                                        - 'unrestricted' key purpose to use for common purposes
                                        - 'restricted' key purpose to use for special operations
                                        But the usages and control over the keys is fully defined by the client.
                                type: string
                                example: restricted
                            name:
                                description: >
                                    A device Name that will be displayed on the UI to differentiate between user's devices.
                                type: string
                            provider:
                                description: >
                                    MFA provider that is to be used on behalf of API calls for fulfilling MFA authentication flow. <br>
                                    ***Important note***
                                    Different MFA providers support different options for 'factorType'
                                type: string
                                enum:
                                    - ELINVAR
                                    - SOLARISBANK
                            publicKey:
                                description: >
                                    Public key in ecdsa-p256 format from the public/private key pair generated on the device. <br>
                                    The setup of public/private key should be in line with requirements of SOLARISBANK MFA provider
                                type: string
                            pushRegistrationId:
                                description: >
                                    Unique device push registration id that identifies device in push notification services. This id should be Registration ID or device token which is referenced in this spec:<br>
                                    [sns-prerequisites-for-mobile-push-notifications]: https://docs.aws.amazon.com/sns/latest/dg/sns-prerequisites-for-mobile-push-notifications.html
                                type: string
    responses:
        OtpDetailsResponse:
            description: response for the OtpDetails that describe selected OTP process status
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OtpDetails'
        DeviceBindingDetailsResponse:
            description: response of the device binding process
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DeviceBindingDetails'
        DevicesList:
            description: List of devices
            content:
                application/json:
                    schema:
                        type: array
                        items:
                            $ref: '#/components/schemas/Device'
        ok:
            description: OK. operation success
        notFound:
            description: resource not found
        internalError:
            description: Internal Server Error
        badRequest:
            description: something wrong with the request that was sent
        unauthorized:
            description: request could not be authorized
        forbidden:
            description: access to the resource is forbidden with current permissions
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
